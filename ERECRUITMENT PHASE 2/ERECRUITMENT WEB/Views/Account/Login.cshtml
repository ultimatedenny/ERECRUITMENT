@using ERECRUITMENT_WEB.Models
@model LoginViewModel
@{
    ViewBag.Title = "Sign In";
    Layout = "";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, shrink-to-fit=no">
    <title>ERECRUITMENT - PT SHIMANO BATAM</title>
    <link rel="icon" type="image/x-icon" href="~/crox/assets/img/favicon.ico" />
    <link href="https://fonts.googleapis.com/css?family=Nunito:400,600,700" rel="stylesheet">
    <link href="~/crox/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="~/crox/assets/css/plugins.css" rel="stylesheet" type="text/css" />
    <link href="~/crox/assets/css/authentication/form-2.css" rel="stylesheet" type="text/css" />
    <link href="~/crox/plugins/notification/snackbar/snackbar.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="~/crox/assets/css/forms/theme-checkbox-radio.css">
    <link rel="stylesheet" type="text/css" href="~/crox/assets/css/forms/switches.css">
</head>
<body class="form">
    <div class="form-container outer">
        <div class="form-form">
            <div class="form-form-wrap">
                <div class="form-container">
                    <div class="form-content" style="margin-left: 10pt; margin-right: 10pt">
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <h1 class="">E-RECRUITMENT</h1>
                            <p class="">Log in to your account to continue.</p>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <form class="text-left">
                                <div class="form">

                                    <div id="username-field" class="field-wrapper input mb-2">
                                        <div class="d-flex justify-content-between">
                                            <label for="password">USERNAME</label>
                                        </div>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-user"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>
                                      
                                        @Html.TextBoxFor(m => m.UseId, new { @class = "form-control", @placeholder = "Username" })
                                        @Html.ValidationMessageFor(m => m.UseId, "", new { @class = "text-danger" })
                                    </div>

                                    <div id="password-field" class="field-wrapper input mb-2">
                                        <div class="d-flex justify-content-between">
                                            <label for="password">PASSWORD</label>
                                        </div>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-lock"><rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 10 0v4"></path></svg>
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @type = "password", @placeholder = "Password" })
                                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="d-sm-flex justify-content-between">
                                        <div class="field-wrapper">
                                            <input id="BTNSUBMIT" type="submit" value="Log in" class="btn btn-outline-primary" />
                                        </div>
                                    </div>

                                </div>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="~/crox/assets/js/libs/jquery-3.1.1.min.js"></script>
    <script src="~/crox/bootstrap/js/popper.min.js"></script>
    <script src="~/crox/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/crox/assets/js/authentication/form-2.js"></script>
    <script src="~/crox/plugins/notification/snackbar/snackbar.min.js"></script>
    <script src="~/crox/assets/js/components/notification/custom-snackbar.js"></script>
    <script src="~/crox/plugins/highlight/highlight.pack.js"></script>
    <script src="~/crox/assets/js/custom.js"></script>

    <script>
        
        document.addEventListener("contextmenu", (e) => {
            e.preventDefault();
        }, false);
        document.addEventListener("keydown", (e) => {
            if (e.ctrlKey || e.keyCode == 123) {
                e.stopPropagation();
                e.preventDefault();
            }
        });
        //eval(function (p, a, c, k, e, d) { e = function (c) { return c.toString(36) }; if (!''.replace(/^/, String)) { while (c--) { d[c.toString(a)] = k[c] || c.toString(a) } k = [function (e) { return d[e] }]; e = function () { return '\\w+' }; c = 1 }; while (c--) { if (k[c]) { p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]) } } return p }('(3(){(3 a(){8{(3 b(2){7((\'\'+(2/2)).6!==1||2%5===0){(3(){}).9(\'4\')()}c{4}b(++2)})(0)}d(e){g(a,f)}})()})();', 17, 17, '||i|function|debugger|20|length|if|try|constructor|||else|catch||5000|setTimeout'.split('|'), 0, {}))
        $(document).ready(function () {
            @*if (Math.min(window.screen.width, window.screen.height) < 768) {
                document.getElementById("BTNSUBMIT").style.visibility = "hidden";
                setTimeout(function () {
                        Snackbar.show({ text: 'UNABLE TO ACCESS WEB VERSION FROM MOBILE, YOU WILL BE BROUGHT TO MOBILE VERSION', pos: 'bottom-right' });
                        setTimeout(function () {
                             window.location.replace('@Url.Action("Index", "Mobile")');
                        }, 3000);
                }, 500);
            }*@
        })
        function uuidv4() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }
        (function (global) {
            if (typeof (global) === "undefined") {
                throw new Error("window is undefined");
            }
            var _hash = "!";
            var noBackPlease = function () {
                global.location.href += "#";
                global.setTimeout(function () {
                    global.location.href += "!";
                }, 50);
            };
            global.onhashchange = function () {
                if (global.location.hash !== _hash) {
                    global.location.hash = _hash;
                }
            };
            global.onload = function () {
                noBackPlease();
                document.body.onkeydown = function (e) {
                    var elm = e.target.nodeName.toLowerCase();
                    if (e.which === 8 && (elm !== 'input' && elm !== 'textarea')) {
                        e.preventDefault();
                    }
                    e.stopPropagation();
                };

            };
        })(window);
    </script>
    @{
        if (TempData["ERROR"] != null)
        {
            <script type="text/javascript">
                Snackbar.show({
                    text: '@TempData["ERROR"]',
                    pos: 'bottom-right'
                });
            </script>
        }
        if (TempData["SUCCESS"] != null)
        {
            <script type="text/javascript">
                Snackbar.show({
                    text: '@TempData["SUCCESS"]',
                    pos: 'bottom-right'
                });
            </script>
        }
    }
</body>



</html>